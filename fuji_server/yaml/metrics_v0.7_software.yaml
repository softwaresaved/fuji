# LIST OF FAIR4RS METRICS AND THEIR RESPONSE OUTPUT FORMATS
config:
  metric_specification: https://doi.org/10.5281/zenodo.10047401
  metric_status: draft
  allowed_harvesting_methods:
  - HTML_EMBEDDING
  - MICRODATA
  - TYPED_LINKS
  - SIGNPOSTING
  allowed_metadata_standards:
  - jsonld
  - dublin-core
  - dcat-data-catalog-vocabulary
metrics:
- metric_identifier: FRSM-01-F1
  metric_number: 1
  metric_short_name: Software Identifier
  metric_name: Does the software have a globally unique and persistent identifier?
  description: A software object may be assigned with a globally unique identifier such that it can be referenced unambiguously by humans or machines. Globally unique means an identifier should be associated with only one resource at any time.
  fair_principle: F1
  target: Software
  evaluation_mechanism: Check if the software identifier is based on a suitable identifier scheme, and test it can be resolved.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-01-F1-1
    metric_test_name: The software has a human and machine-readable unique identifier that is resolvable to a machine-readable landing page and follows a defined unique identifier syntax.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-01-F1-2
    metric_test_name: The identifier uses an identifier scheme that guarantees globally uniqueness and persistence.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-01-F1-3
    metric_test_name: The identifier scheme is commonly used in the domain.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2023-11-10
  date_updated: 2023-12-13
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-02-F1.1
  metric_number: 2
  metric_short_name: Software Component Identifiers
  metric_name: Do the different components of the software have their own identifiers?
  description: Conceptually, it is useful for identifiers to be assigned at a more granular level than just the software project (often synonymous with the “software concept” or “software project”). For instance a software product may consist of different modules, which in turn may be implemented by different files. This metric tests that these different components are not all assigned the same identifier, and that the relationship between components is embodied in the identifier metadata.
  fair_principle: F1.1
  target: Software
  evaluation_mechanism: Check if each software identifier resolves to the appropriate software component and examine identifier metadata.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-02-F1.1-1
    metric_test_name: Where the 'software' consists of multiple distinct components, each component has a distinct identifier.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-02-F1.1-2
    metric_test_name: The relationship between components is embodied in the identifier metadata.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-02-F1.1-3
    metric_test_name: Every component to granularity level GL3 (module) has its own unique identifier.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-03-F1.2
  metric_number: 3
  metric_short_name: Software Version Identifier
  metric_name: Does each version of the software have a unique identifier?
  description: To make different versions of the same software (or component) findable, each version needs to be assigned a different identifier. The relationship between versions is embodied in the associated metadata.
  fair_principle: F1.2
  target: Software
  evaluation_mechanism: Check if each software identifier resolves to a different version and examine identifier metadata.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-03-F1.2-1
    metric_test_name: Each version of the software has a different identifier.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-03-F1.2-2
    metric_test_name: Relations between the versions are included in the identifier metadata.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-03-F1.2-3
    metric_test_name: The version number is included in the identifier metadata.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-04-F2
  metric_number: 4
  metric_short_name: Descriptive Metadata
  metric_name: Does the software include descriptive metadata which helps define its purpose?
  description: Software requires descriptive metadata to support indexing, search and discoverability.
  fair_principle: F2
  target: Software
  evaluation_mechanism: Check if the software and/or software identifier has machine-readable descriptive metadata associated with it that describe its purpose.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-04-F2-1
    metric_test_name: The software includes a README or other file which includes the software title and description.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-04-F2-2
    metric_test_name: The software includes other descriptive metadata such as domain, funder, programming language, date created, and keywords.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-04-F2-3
    metric_test_name: The metadata is contained in a format such as CodeMeta or ProjectObjectModel that enables full machine actionability.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-05-R1
  metric_number: 5
  metric_short_name: Development Metadata
  metric_name: Does the software include development metadata which helps define its status?
  description: Software requires descriptive metadata to support indexing, search and discoverability
  fair_principle: R1
  target: Software
  evaluation_mechanism: Check if the software has machine-readable descriptive metadata associated with it that describes its development and status.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-05-R1-1
    metric_test_name: The software includes metadata for contact or support in the README or other intrinsic metadata file according to community standards.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-05-R1-2
    metric_test_name: The software includes metadata for development status, links to documentation.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-05-R1-3
    metric_test_name: The metadata is contained in a format such as CodeMeta or ProjectObjectModel that enables full machine-actionability.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-06-F2
  metric_number: 6
  metric_short_name: Contributor metadata
  metric_name: Does the software include metadata about the contributors and their roles?
  description: Software should make it easy to recognise and credit all contributors.
  fair_principle: F2
  target: Software
  evaluation_mechanism: Check if the software and/or software identifier has machine readable descriptive metadata associated with it that include contributors and roles.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-06-F2-1
    metric_test_name: The software includes metadata about the contributors.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-06-F2-2
    metric_test_name: The software includes citation metadata that includes all contributors and their roles. This includes ORCIDs when contributors have them.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-06-F2-3
    metric_test_name: Does the citation metadata include the proportional credit attributed to each contributor?
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-07-F3
  metric_number: 7
  metric_short_name: Identifier in Software Metadata
  metric_name: Does the software metadata include the identifier for the software?
  description: Software should include its identifier to make it easier to be cited and indexed.
  fair_principle: F3
  target: Software
  evaluation_mechanism: Check if the software includes its own software identifier, and that the identifier resolves to that software.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-07-F3-1
    metric_test_name: Does the software include an identifier in the README or citation file?
    metric_test_score: 2
    metric_test_maturity: 1
    metric_test_requirements:
      - target: https://f-uji.net/vocab/metadata/standards
        modality: any
        required:
          location:
            - README
            - CITATION
  - metric_test_identifier: FRSM-07-F3-2
    metric_test_name: Does the identifier resolve to the same instance of the software?
    metric_test_score: 2
    metric_test_maturity: 2
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 4
- metric_identifier: FRSM-08-F4
  metric_number: 8
  metric_short_name: Persistent Metadata
  metric_name: Does the software have a publicly available, openly accessible and persistent metadata record?
  description: Even if the software itself is no longer usable or accessible, its metadata should still be available and accessible.
  fair_principle: F4
  target: Software
  evaluation_mechanism: Check if the software identifier includes a reference to a persistent landing page or other metadata record, and if that metadata is still accessible.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-08-F4-1
    metric_test_name: A metadata record for the software is present on an infrastructure that guarantees persistence.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-08-F4-2
    metric_test_name: The persistent metadata record is available through public search engines. The metadata has a globally unique and persistent identifier.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-08-F4-3
    metric_test_name: The persistent metadata record is available through multiple, cross-referenced infrastructures.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-09-A1
  metric_number: 9
  metric_short_name: Standard Communication Protocol of Repository
  metric_name: Is the software developed in a code repository / forge that uses standard communications protocols?
  description: Software source code repositories / forges (a.k.a. version control platforms) should use standard communications protocols (such as https / sftp) to enable the widest possible set of contributors.
  fair_principle: A1
  target: Software
  evaluation_mechanism: Check if the identifier for the code repository / forge can be accessed using standardised communications protocols such as https or sftp.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-09-A1-1
    metric_test_name: The code repository / forge can be accessed using the identifier via a standardised protocol.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-09-A1-2
    metric_test_name: If authentication or authorisation are required, these are supported by the communication protocols and the repository / forge.
    metric_test_score: 1
    metric_test_maturity: 2
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 2
- metric_identifier: FRSM-10-I1
  metric_number: 10
  metric_short_name: Open Referenced Formats
  metric_name: Are the formats used by the data consumed or produced by the software open and a reference provided to the format?
  description: The use of open file formats for data improves the reusability and understandability of the software.
  fair_principle: I1
  target: Software
  evaluation_mechanism: Check the software source code and documentation for references to the data formats used.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-10-I1-1
    metric_test_name: The documentation describes the data formats used.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-10-I1-2
    metric_test_name: The data formats used are open.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-10-I1-3
    metric_test_name: A reference to the schema is provided.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-11-I1
  metric_number: 11
  metric_short_name: Open API
  metric_name: Does the software use open APIs that support machine-readable interface definition?
  description: An open Application Programming Interface can be freely accessed by other software or developers, which makes it easier to integrate software and encourages modularity and reuse.
  fair_principle: I1
  target: Software
  evaluation_mechanism: Call the software API.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-11-I1-1
    metric_test_name: The software provides documented APIs.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-11-I1-2
    metric_test_name: The APIs are open (freely accessible).
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-11-I1-3
    metric_test_name: The APIs include a machine-readable interface definition.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-12-I2
  metric_number: 12
  metric_short_name: References
  metric_name: Does the software provide references to other objects that support its use?
  description: Determining the usefulness of a piece of software is often aided by understanding what it is used with.
  fair_principle: I2
  target: Software
  evaluation_mechanism: Check if the software metadata includes references to other related resources.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-12-I2-1
    metric_test_name: The software metadata includes machine-readable references to articles describing the software, articles demonstrating use of the software, or to the data it uses.
    metric_test_score: 1
    metric_test_maturity: 2
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 1
- metric_identifier: FRSM-13-R1
  metric_number: 13
  metric_short_name: Requirements
  metric_name: Does the software describe what is required to use it?
  description: Software is made more reusable by providing suitable machine-actionable information on dependencies, build and configuration.
  fair_principle: R1
  target: Software
  evaluation_mechanism: Check for machine-readable information that helps support the understanding of how it is to be used
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-13-R1-1
    metric_test_name: The software has build, installation and/or execution instructions.
    metric_test_score: 1
    metric_test_maturity: 1
    metric_test_requirements:
    - target: https://f-uji.net/vocab/metadata/standards
      modality: any
      required:
        location:
        - README
        - docs_directory
        - wiki
        keywords:
        - build
        - install
        - run
  - metric_test_identifier: FRSM-13-R1-2
    metric_test_name: Dependencies are provided in a machine-readable format and the building and installation of the software is automated.
    metric_test_score: 1
    metric_test_maturity: 2
    metric_test_requirements:
    - target: https://f-uji.net/vocab/metadata/standards
      modality: any
      required:
        dependency_file:
        - requirements.txt
    - target: https://f-uji.net/vocab/metadata/standards
      modality: all
      required:
        automation_file:
        - Jenkinsfile
        - github_actions
        automation_keywords:
        - build
        - deploy
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 2
- metric_identifier: FRSM-14-R1
  metric_number: 14
  metric_short_name: Test Cases
  metric_name: Does the software come with test cases to demonstrate it is working?
  description: The provision of test cases improves confidence in the software.
  fair_principle: R1
  target: Software
  evaluation_mechanism: Check for the presence of automated tests.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-14-R1-1
    metric_test_name: Tests and data are provided to check that the software is operating as expected.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-14-R1-2
    metric_test_name: Automated unit and system tests are provided.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-14-R1-3
    metric_test_name: Code coverage / test coverage is reported.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-15-R1.1
  metric_number: 15
  metric_short_name: Software Source Code License
  metric_name: The software source code includes licensing information for the software and any bundled external software.
  description: It is important that software licences are included with the source code as many tools and processes look for licensing information there to determine licence compatibility.
  fair_principle: R1.1
  target: Software
  evaluation_mechanism: Metric evaluation is based on the presence of a machine readable license file.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-15-R1.1-1
    metric_test_name: License file is included.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-15-R1.1-2
    metric_test_name: The source code includes licensing information for all components bundled with that software.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-15-R1.1-3
    metric_test_name: Recognized licence is in SPDX format.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2023-11-10
  date_updated: 2023-12-13
  version: 0.1
  total_score: 3
- metric_identifier: FRSM-16-R1.1
  metric_number: 16
  metric_short_name: Software Metadata License
  metric_name: Does the software metadata record include licensing information?
  description: It is important for licensing information to be on the publicly searchable and accessible metadata record
  fair_principle: R1.1
  target: Software
  evaluation_mechanism: Check if the software identifier or the metadata record referenced by it includes licensing information
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-16-R1.1-1
    metric_test_name: The identifier or metadata record includes licensing and copyright information.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-16-R1.1-2
    metric_test_name: The software licensing information is in SPDX format, or other machine-readable form.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 2
- metric_identifier: FRSM-17-R1.2
  metric_number: 17
  metric_short_name: Provenance
  metric_name: Does the software include provenance information that describe the development of the software?
  description: Good provenance metadata clarifies the origins and intent behind the development of the software, and establishes authenticity and trust.
  fair_principle: R1.2
  target: Software
  evaluation_mechanism: Check the development metadata available from the code repository / forge for the software.
  test_scoring_mechanism: cumulative
  metric_tests:
  - metric_test_identifier: FRSM-17-R1.2-1
    metric_test_name: The software source code repository / forge includes a commit history.
    metric_test_score: 1
    metric_test_maturity: 1
  - metric_test_identifier: FRSM-17-R1.2-2
    metric_test_name: The software source code repository links commits to issues / tickets.
    metric_test_score: 1
    metric_test_maturity: 2
  - metric_test_identifier: FRSM-17-R1.2-3
    metric_test_name: The software project uses other tools to capture detailed machine readable provenance information.
    metric_test_score: 1
    metric_test_maturity: 3
  created_by: FAIR4RS
  date_created: 2024-01-18
  date_updated: 2024-01-18
  version: 0.1
  total_score: 3
